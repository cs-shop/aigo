<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cs.dao.RolesMapper" >
  <resultMap id="BaseResultMap" type="com.cs.pojo.Roles" >
    <id column="roleId" property="roleid" jdbcType="INTEGER" />
    <result column="roleName" property="rolename" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="roleFlag" property="roleflag" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.cs.pojo.Roles" extends="BaseResultMap" >
    </resultMap>
  <sql id="Example_Where_Clause" >
    <trim prefix="where" prefixOverrides="and|or" >
      <if test="condition.rolename != null" >
         and roleName = #{condition.rolename}
      </if>
      <if test="condition.createtime != null" >
         and createTime = #{condition.createtime}
      </if>
      <if test="condition.roleflag != null" >
         and roleFlag = #{condition.roleflag}
      </if>
      <if test="condition.grant != null" >
         and grant = #{condition.grant}
      </if>
    </trim>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    roleId, roleName, createTime, roleFlag
  </sql>
  <sql id="Blob_Column_List" >
    grant
  </sql>
  <select id="selectByParamsWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.cs.pojo.Criteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cs_roles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="common.Mysql_Pagination_Limit" />
  </select>
  <select id="selectByParams" resultMap="BaseResultMap" parameterType="com.cs.pojo.Criteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cs_roles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="common.Mysql_Pagination_Limit" />
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cs_roles
    where roleId = #{roleid}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from cs_roles
    where roleId = #{roleid}
  </delete>
  <delete id="deleteByParams" parameterType="com.cs.pojo.Criteria" >
    delete from cs_roles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cs.pojo.Roles" >
    insert into cs_roles (roleId, roleName, createTime, roleFlag, grant)
    values (#{roleid}, #{rolename}, #{createtime}, #{roleflag}, #{grant})
  </insert>
  <insert id="insertSelective" parameterType="com.cs.pojo.Roles" >
    insert into cs_roles
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleid != null" >
        roleId,
      </if>
      <if test="rolename != null" >
        roleName,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="roleflag != null" >
        roleFlag,
      </if>
      <if test="grant != null" >
        grant,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleid != null" >
        #{roleid},
      </if>
      <if test="rolename != null" >
        #{rolename},
      </if>
      <if test="createtime != null" >
        #{createtime},
      </if>
      <if test="roleflag != null" >
        #{roleflag},
      </if>
      <if test="grant != null" >
        #{grant},
      </if>
    </trim>
  </insert>
  <select id="countByParams" parameterType="com.cs.pojo.Criteria" resultType="java.lang.Integer" >
    select count(*) from cs_roles
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByParamsSelective" parameterType="map" >
    update cs_roles
    <set >
      <if test="record.roleid != null" >
        roleId = #{record.roleid},
      </if>
      <if test="record.rolename != null" >
        roleName = #{record.rolename},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime},
      </if>
      <if test="record.roleflag != null" >
        roleFlag = #{record.roleflag},
      </if>
      <if test="record.grant != null" >
        grant = #{record.grant},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByParamsWithBLOBs" parameterType="map" >
    update cs_roles
    set roleId = #{record.roleid},
      roleName = #{record.rolename},
      createTime = #{record.createtime},
      roleFlag = #{record.roleflag},
      grant = #{record.grant}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByParams" parameterType="map" >
    update cs_roles
    set roleId = #{record.roleid},
      roleName = #{record.rolename},
      createTime = #{record.createtime},
      roleFlag = #{record.roleflag}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cs.pojo.Roles" >
    update cs_roles
    <set >
      <if test="rolename != null" >
        roleName = #{rolename},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime},
      </if>
      <if test="roleflag != null" >
        roleFlag = #{roleflag},
      </if>
      <if test="grant != null" >
        grant = #{grant},
      </if>
    </set>
    where roleId = #{roleid}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cs.pojo.Roles" >
    update cs_roles
    set roleName = #{rolename},
      createTime = #{createtime},
      roleFlag = #{roleflag},
      grant = #{grant}
    where roleId = #{roleid}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cs.pojo.Roles" >
    update cs_roles
    set roleName = #{rolename},
      createTime = #{createtime},
      roleFlag = #{roleflag}
    where roleId = #{roleid}
  </update>
</mapper>